apiVersion: apps/v1
kind: Deployment
metadata:
  name: retranslator
  namespace: logistic-package
spec:
  replicas: 1
  selector:
    matchLabels:
      app: retranslator
      version: stable
  template:
    metadata:
      labels:
        app: retranslator
        version: stable
    spec:
      containers:
        - name: retranslator
          image: arslanovdi/retranslator:v0.1.3
          imagePullPolicy: Always
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8000
              protocol: TCP
            - containerPort: 9100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/live"
              port: 8000
            failureThreshold: 3       # количество последовательных неудачных проверок, чтобы считать контейнер мертвым...
            initialDelaySeconds: 30   # секунд до начала проверки
            periodSeconds: 60         # секунд между проверками
            timeoutSeconds: 10        # секунд ожидания ответа, если превышено то проба неудачная
            successThreshold: 1     # количество последовательных успешных проверок, чтобы подтвердить состояние
            terminationGracePeriodSeconds: 10 # секунд ожидания после получения SIGTERM
          readinessProbe:
            httpGet:
              path: "/ready"
              port: 8000
            failureThreshold: 3       # количество последовательных неудачных проверок, чтобы считать контейнер мертвым...
            initialDelaySeconds: 30   # секунд до начала проверки
            periodSeconds: 15         # секунд между проверками
            timeoutSeconds: 10        # секунд ожидания ответа, если превышено то проба неудачная
            successThreshold: 1       # количество последовательных успешных проверок, чтобы подтвердить состояние
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: logistic.postgres.credentials.postgresql.acid.zalan.do
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: logistic.postgres.credentials.postgresql.acid.zalan.do
                  key: password
            - name: DB_HOST
              value: "postgres.logistic-package.svc.cluster.local"
            - name: KAFKA_BROKERS
              value: "kafka-cluster-kafka-brokers.kafka.svc.cluster.local:9092"
            - name: SCHEMA_REGISTRY_URL
              value: "http://schemaregistry.kafka.svc.cluster.local:8081"
            - name: JAEGER_HOST
              value: "jaeger.observability.svc.cluster.local"
          volumeMounts:
            - name: config
              mountPath: "/root/config"
      volumes:
        - name: config
          configMap:
            name: logistic-package-api